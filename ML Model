#Preprocessing of Images
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.preprocessing.image import ImageDataGenerator
from keras.layers import MaxPooling2D,Convolution2D,Dense,Dropout,Flatten


train_datagen=ImageDataGenerator(
                       rescale=1./255,
                       shear_range=0.2,
                       zoom_range=0.2,
                       horizontal_flip=True)
validation_datagen=ImageDataGenerator(
                       rescale=1./255,
                       shear_range=0.2,
                       zoom_range=0.2,
                       horizontal_flip=True)
test_datagen=ImageDataGenerator(rescale=1./255)
training_set=train_datagen.flow_from_directory(
                                                './chest_xray/train',
                                                 target_size=(150,150),batch_size=32,class_mode='binary')
validation_set=train_datagen.flow_from_directory(
                                                './chest_xray/val',
                                                 target_size=(150,150),batch_size=32,class_mode='binary')                              
model=Sequential()
model.add(Convolution2D(32,(3,3),activation='relu',input_shape=(150,150,3)))
model.add(MaxPooling2D((2,2)))
model.add(Convolution2D(64,(3,3),activation='relu',input_shape=(150,150,3)))
model.add(MaxPooling2D((2,2)))
model.add(Convolution2D(128,(3,3),activation='relu',input_shape=(150,150,3)))
model.add(MaxPooling2D((2,2)))
model.add(Flatten())
model.add(Dense(512,activation='relu'))
model.add(Dense(128,activation='relu'))
model.add(Dense(1,activation='sigmoid'))
model.summary()


model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])
hist=model.fit_generator(training_set,steps_per_epoch=1000,epochs=10,validation_data=validation_set,validation_steps=100)
